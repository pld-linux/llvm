--- llvm-3.5.0.src/tools/polly/lib/Transform/Pocc.cpp.orig	2014-06-28 10:59:45.000000000 +0200
+++ llvm-3.5.0.src/tools/polly/lib/Transform/Pocc.cpp	2014-10-03 22:56:19.591962149 +0200
@@ -238,8 +238,6 @@
 }
 
 void Pocc::printScop(raw_ostream &OS) const {
-  std::unique_ptr<MemoryBuffer> stdoutBuffer;
-  std::unique_ptr<MemoryBuffer> stderrBuffer;
 
   OS << "Command line: ";
 
@@ -249,20 +247,20 @@
 
   OS << "\n";
 
-  if (std::error_code ec =
-          MemoryBuffer::getFile(PlutoStdout.str(), stdoutBuffer))
-    OS << "Could not open pocc stdout file: " + ec.message() << "\n";
+  ErrorOr<std::unique_ptr<MemoryBuffer>> stdoutResult = MemoryBuffer::getFile(PlutoStdout.str());
+  if (!stdoutResult)
+    OS << "Could not open pocc stdout file: " + stdoutResult.getError().message() << "\n";
   else {
-    OS << "pocc stdout: " << stdoutBuffer->getBufferIdentifier() << "\n";
-    OS << stdoutBuffer->getBuffer() << "\n";
+    OS << "pocc stdout: " << stdoutResult.get()->getBufferIdentifier() << "\n";
+    OS << stdoutResult.get()->getBuffer() << "\n";
   }
 
-  if (std::error_code ec =
-          MemoryBuffer::getFile(PlutoStderr.str(), stderrBuffer))
-    OS << "Could not open pocc stderr file: " + ec.message() << "\n";
+  ErrorOr<std::unique_ptr<MemoryBuffer>> stderrResult = MemoryBuffer::getFile(PlutoStderr.str());
+  if (!stderrResult)
+    OS << "Could not open pocc stderr file: " + stderrResult.getError().message() << "\n";
   else {
     OS << "pocc stderr: " << PlutoStderr << "\n";
-    OS << stderrBuffer->getBuffer() << "\n";
+    OS << stderrResult.get()->getBuffer() << "\n";
   }
 }
 
--- llvm-3.5.0.src/tools/polly/autoconf/configure.ac.orig	2014-04-11 11:47:45.000000000 +0200
+++ llvm-3.5.0.src/tools/polly/autoconf/configure.ac	2014-10-06 16:37:55.052037462 +0200
@@ -93,7 +93,7 @@
 
 dnl Check that we have libpluto.
 saved_CXXFLAGS=$CXXFLAGS
-CXXFLAGS="$CXXFLAGS $gmp_inc $isl_inc"
+CXXFLAGS="$CXXFLAGS $gmp_inc $isl_inc -std=c++0x"
 find_lib_and_headers([pluto], [pluto/libpluto.h], [pluto])
 CXXFLAGS=$saved_CXXFLAGS
 AS_IF([test "x$pluto_found" = "xyes"],
